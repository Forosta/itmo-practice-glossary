import React, { useState } from 'react';
import './glossary.css'

const Glossary = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const glossary = [
    {
      term: "Главный сервис",
      description: "Центральный компонент системы, который координирует все процессы, включая анализ данных, моделирование и взаимодействие с пользователями."
    },
    {
      term: "Модуль Анализа ",
      description: "Компонент системы, отвечающий за обработку и анализ данных, включая их интерпретацию и классификацию"
    },
    {
      term: "Нейросеть",
      description: "Обученная модель, которая выполняет сложные задачи, такие как распознавание образов, обработка естественного языка и принятие решений"
    },
    {
      term: "Дата-сет",
      description: "Набор данных, используемых для обучения и тестирования нейросетей и других алгоритмов машинного обучения"
    },
    {
      term: "NFT",
      description: "Уникальный цифровой актив, представляющий собой невзаимозаменяемый токен на блокчейне, часто используется для доказательства владения цифровыми объектами."
    },
    {
      term: "Smart contract",
      description: "Это протокол, предназначенный для исполнения условий и соглашений в рамках децентрализованных систем, таких как блокчейн."
    },
    {
      term: "База данных",
      description: "Централизованное хранилище данных, которое эффективно управляет большими объемами информации, обеспечивая их хранение, доступ и обновление."
    },
    {
      term: "Блокчейн",
      description: "Децентрализованная технология распределенного реестра, которая обеспечивает прозрачность, безопасность и неизменность данных"
    },
    {
      term: "Интеллектуальный Агент",
      description: "Программное обеспечение, которое выполняет автоматические задачи от имени пользователя, часто используя искусственный интеллект для адаптации своих действий"
    },
    {
      term: "Пользовательский Интерфейс",
      description: "Часть системы, с которой непосредственно взаимодействует пользователь, включая графический интерфейс, командную строку или другие средства для ввода данных и получения результатов"
    },
    {
      term: "Модуль Прогнозирования и Моделирования",
      description: "Компонент системы, использующий алгоритмы машинного обучения и статистический анализ для создания прогнозов и моделей на основе данных"
    },
    {
      term: "API",
      description: "Интерфейс программирования приложений, позволяющий различным программам и компонентам системы взаимодействовать друг с другом"
    },
    {
      term: "Web 3.0",
      description: "Поколение интернет-технологий, характеризующееся использованием машинного обучения, искусственного интеллекта и блокчейн-технологий для создания более интеллектуальных, подключенных и открытых веб-приложений"
    },
    {
      term: "Chat-GPT",
      description: "Большая языковая модель, обученная OpenAI, которая использует глубокое обучение для генерации текста и ответов на вопросы."
    },
    {
      term: "Данные",
      description: "Информация, обрабатываемая и хранимая в системе, которая может включать в себя все виды научных источников"
    },
  ];

  const filteredGlossary = glossary.filter(item =>
    item.term.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className='glossary-container'>
      <input
        type="text"
        placeholder="Search term..."
        onChange={e => setSearchTerm(e.target.value)}
      />
      <ul className='glossary-list'>
        {filteredGlossary.map((item, index) => (
          <li key={index}>
            <b>{item.term}:</b> {item.description}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default Glossary;